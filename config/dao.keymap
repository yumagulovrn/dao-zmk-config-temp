/*
 * Copyright (c) 2021 Rafael Yumagulov
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt {
    quick_tap_ms = <200>;
};

&mt {
    quick_tap_ms = <200>;
};

/ {
    chosen {
        // zmk,matrix_transform = &default_transform;

        zmk,matrix_transform = &extra_keys_transform;
    };
};

/ {
    macros {
        moom: moom {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RGUI &kp RALT &kp DOT>,
                <&macro_release>,
                <&kp RGUI &kp RALT &kp DOT>;

            label = "MOOM";
        };

        moom_left_half: moom_left_half {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&moom>,
                <&macro_wait_time 50>,
                <&macro_press>,
                <&kp LEFT_WIN &kp LEFT_ARROW>,
                <&macro_release>,
                <&kp LEFT_WIN &kp LEFT_ARROW>;

            label = "MOOM_LEFT_HALF";
        };

        moom_right_half: moom_right_half {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&moom>,
                <&macro_wait_time 50>,
                <&macro_press>,
                <&kp LEFT_WIN &kp RIGHT_ARROW>,
                <&macro_release>,
                <&kp LEFT_WIN &kp RIGHT_ARROW>;

            label = "MOOM_RIGHT_HALF";
        };

        moom_top_half: moom_top_half {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&moom>,
                <&macro_wait_time 50>,
                <&macro_press>,
                <&kp LEFT_WIN &kp UP_ARROW>,
                <&macro_release>,
                <&kp LEFT_WIN &kp UP_ARROW>;

            label = "MOOM_TOP_HALF";
        };

        moom_bottom_half: moom_bottom_half {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&moom>,
                <&macro_wait_time 50>,
                <&macro_press>,
                <&kp LEFT_WIN &kp DOWN_ARROW>,
                <&macro_release>,
                <&kp LEFT_WIN &kp DOWN_ARROW>;

            label = "MOOM_BOTTOM_HALF";
        };

        moom_shrink: moom_shrink {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&moom>, <&macro_wait_time 50>, <&macro_tap>, <&kp F8>;

            label = "MOOM_SHRINK";
        };

        moom_revert: moom_revert {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&moom>, <&macro_wait_time 50>, <&macro_tap>, <&kp F6>;

            label = "MOOM_REVERT";
        };

        moom_left: moom_left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&moom>, <&macro_wait_time 50>, <&macro_tap>, <&kp F7>;

            label = "MOOM_LEFT";
        };

        moom_right: moom_right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&moom>, <&macro_wait_time 50>, <&macro_tap>, <&kp F9>;

            label = "MOOM_RIGHT";
        };

        snagit: snagit {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RGUI &kp F13>,
                <&macro_release>,
                <&kp RGUI &kp F13>;

            label = "SNAGIT";
        };

        lock_sceen: lock_sceen {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI &kp LEFT_CONTROL &kp Q>,
                <&macro_release>,
                <&kp LEFT_GUI &kp LEFT_CONTROL &kp Q>;

            label = "LOCK_SCEEN";
        };

        undo: undo {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI &kp Z>,
                <&macro_release>,
                <&kp LEFT_GUI &kp Z>;

            label = "UNDO";
        };

        redo: redo {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_SHIFT &kp LEFT_GUI &kp Z>,
                <&macro_release>,
                <&kp LEFT_SHIFT &kp LEFT_GUI &kp Z>;

            label = "REDO";
        };

        change_layout: change_layout {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI &kp SPACE>,
                <&macro_release>,
                <&kp LEFT_GUI &kp SPACE>;

            label = "CHANGE_LAYOUT";
        };

        double_shift: double_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp LEFT_SHIFT>,
                <&macro_wait_time 30>,
                <&kp LEFT_SHIFT>;

            label = "DOUBLE_SHIFT";
        };

        plain_text: plain_text {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_SHIFT &kp LEFT_GUI &kp K>,
                <&macro_release>,
                <&kp LEFT_SHIFT &kp LEFT_GUI &kp K>;

            label = "PLAIN_TEXT";
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_next {
            timeout-ms = <50>;
            key-positions = <22 23>;
            layers = <2>;
            bindings = <&kp C_NEXT>;
        };

        combo_prev {
            timeout-ms = <50>;
            key-positions = <21 22>;
            layers = <2>;
            bindings = <&kp C_PREVIOUS>;
        };

        combo_pause {
            timeout-ms = <50>;
            key-positions = <21 22 23>;
            layers = <2>;
            bindings = <&kp C_PLAY_PAUSE>;
        };

        lock_screen {
            bindings = <&lock_sceen>;
            key-positions = <5 4 3>;
            layers = <0>;
            timeout-ms = <50>;
        };

        undo {
            bindings = <&undo>;
            key-positions = <21 22>;
            layers = <0>;
            timeout-ms = <50>;
        };

        redo {
            bindings = <&redo>;
            key-positions = <22 23>;
            layers = <0>;
            timeout-ms = <50>;
        };

        change_layout {
            bindings = <&change_layout>;
            key-positions = <18 17 16>;
            layers = <0>;
            timeout-ms = <50>;
        };

        double_shift {
            bindings = <&double_shift>;
            key-positions = <39 42>;
            layers = <0>;
        };

        plain_text {
            bindings = <&plain_text>;
            key-positions = <28 29 30>;
            layers = <0>;
            timeout-ms = <50>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp LWIN  &kp GRAVE         &kp Q  &kp W  &kp E        &kp R            &kp T          &kp Y              &kp U          &kp I        &kp O    &kp P     &kp LBKT                &mt RWIN RBKT
          &kp LEFT_ALT      &kp A  &kp S  &kp D        &kp F            &kp G          &kp H              &kp J          &kp K        &kp L    &kp SEMI  &mt LEFT_ALT SQT
          &kp LEFT_CONTROL  &kp Z  &kp X  &kp C        &kp V            &kp B          &kp N              &kp M          &kp COMMA    &kp DOT  &kp FSLH  &mt RIGHT_CONTROL BSLH
                                          &lt RSE TAB  &mt LSHFT SPACE  &lt LWR RET    &lt LWR BACKSPACE  &mt RSHFT ESC  &lt RSE DEL
            >;
        };

        lower_layer {
            bindings = <
&trans  &kp KP_NUMLOCK     &kp SLASH  &kp KP_N7  &kp KP_N8    &kp KP_N9  &kp AT_SIGN    &kp HASH   &kp LEFT_BRACKET      &kp UNDERSCORE   &kp PIPE          &kp RIGHT_BRACKET      &kp PERCENT          &kp RWIN
        &mt LEFT_ALT STAR  &kp MINUS  &kp KP_N4  &kp KP_N5    &kp KP_N6  &kp KP_PLUS    &kp EQUAL  &kp LEFT_PARENTHESIS  &kp KP_ASTERISK  &kp AMPERSAND     &kp RIGHT_PARENTHESIS  &mt RIGHT_ALT CARET
        &trans             &kp KP_N0  &kp KP_N1  &kp KP_N2    &kp KP_N3  &kp KP_DOT     &kp EXCL   &kp LEFT_BRACE        &kp LESS_THAN    &kp GREATER_THAN  &kp RIGHT_BRACE        &mt RCTRL DOLLAR
                                                 &lt ADJ TAB  &trans     &trans         &trans     &trans                &lt ADJ DEL
            >;
        };

        raise_layer {
            bindings = <
&trans  &trans  &none  &kp F7  &kp F8  &kp F9  &kp F10        &kp C_VOL_UP       &kp HOME  &kp PSCRN  &kp PG_UP  &kp SLCK         &kp CAPS           &kp RIGHT_COMMAND
        &trans  &none  &kp F4  &kp F5  &kp F6  &kp F11        &kp C_MUTE         &kp LEFT  &kp UP     &kp RIGHT  &kp INS          &kp RIGHT_ALT
        &trans  &none  &kp F1  &kp F2  &kp F3  &kp F12        &kp C_VOL_DN       &kp END   &kp DOWN   &kp PG_DN  &kp PAUSE_BREAK  &kp RIGHT_CONTROL
                               &trans  &trans  &lt ADJ RET    &lt ADJ BACKSPACE  &trans    &trans
            >;
        };

        adjust_layer {
            bindings = <
&sys_reset  &bootloader  &none         &none         &none         &none         &none           &snagit  &moom_left       &moom_shrink       &moom_right       &none  &bootloader  &sys_reset
            &bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &moom    &moom_left_half  &moom_top_half     &moom_right_half  &none  &none
            &none        &none         &none         &none         &none         &none           &none    &none            &moom_bottom_half  &none             &none  &none
                                                     &trans        &none         &trans          &trans   &none            &trans
            >;
        };
    };
};
